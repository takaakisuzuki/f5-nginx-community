js_import js/http.js;
js_import js/f5nginx.js;

map $http_user_agent $flag {
    default              unknown;
    "~Android"           mobile;
    "~iPhone"            mobile;
    "~Macintosh"         pc;
    "~Windows"           pc;
}

geo $country {
    default        JP;
    127.0.0.0/24   US;
    127.0.0.1/32   US;
    10.1.0.0/16    SG;
    192.168.1.0/24 JP;
    2001:0db8::/32 JP;
}

upstream backend {
    server 127.0.0.1:80;   
}

server {
    listen       80;
    server_name  localhost;

    location / {
        root   /usr/share/nginx/html;
        index  demo.html;
    }

    location /pc/ {
        if ($flag != 'pc') {
            return 403;
        }

        default_type text/plain;
        return 200 "Flag: $flag.\n\nYour User Agent is $http_user_agent\n";
    }

    location /mobile/ {
        if ($flag != 'mobile') {
            return 403;
        }

        default_type text/plain;
        return 200 "Flag: $flag.\n\nYour User Agent is $http_user_agent\n";
    }

    location /country/ {
        default_type text/plain;
        return 200 "Country: Your location is $country\n";
    }

    # http://localhost/application/
    location /application/ {
        default_type text/plain;
        return 200 "Maches everything that starting with /application/\n Request URI: $request_uri";
    }

    # http://localhost/application/0/
    location = /application/0/ {
        default_type text/plain;
        return 200 "Exact match\n $request_uri $arg_username";

    }

    # http://localhost/application/01/
    location ^~ /application/01/ {
        default_type text/plain;
        return 200 "Preferential match\n $request_uri";
    }

    # http://localhost/images/
    location ^~ /images/ {
        root /usr/share/nginx/html;
    }

    # http://localhost/APPLICATION/0/
    location ~ /APPLICATION/[0-9]/ {
        default_type text/plain;
        return 200 "Case sensitive regex match\n $request_uri";
    }

    # http://localhost/application/11/
    location ~* /application/[0-9][0-9]/ {
        default_type text/plain;
        return 200 "Case insensitive regex match\n $request_uri";
    }

    # http://localhost/nginx.png
    # http://localhost/aaaa/nginx.png
    location ~* ^(/.+)\.(jpg|jpeg|jpe|png|gif)$ {
        root /usr/share/nginx/html;
        rewrite ^(.+) /images/nginx.png break;
    }

    rewrite ^/([a-z]+)/(.+)/([0-9])$ /demo/demo.html last;
    rewrite ^/エンジンエックス.* /demo/demo.html last;
    rewrite ^/city/(.*)/(.*)/$ /demo/demo.html?pre_id=$1&city_id=$2 last;

    location /demo/ {
        sub_filter 'user_agent_type' '$flag';
        sub_filter 'proto_scheme' '$scheme';
        sub_filter 'http_protocol' '$server_protocol';
        sub_filter 'server_hostname' '$ssl_server_name';
        sub_filter 'server_address' '$upstream_addr';
        sub_filter 'request_method' '$request_method';
        sub_filter 'server_url' '$request_uri';
        sub_filter 'remote_addr' '$remote_addr:$remote_port';
        sub_filter 'server_date' '$time_local';
        sub_filter 'client_browser' '$http_user_agent';
        sub_filter 'request_id' '$request_id';
        sub_filter 'nginx_version' '$nginx_version';
        sub_filter 'document_root' '$document_root';
        sub_filter 'proxied_for_ip' '$http_X_Forwarded_for';
        sub_filter 'request_uri_path' '$request_uri';
        sub_filter 'rewrite_uri_path' '$uri?$args';

        add_header 'X-Proxy-Header' "F5 NGINX Community add_header" always;

        add_header X-Frame-Options           "SAMEORIGIN" always;
        add_header X-XSS-Protection          "1; mode=block" always;
        add_header X-Content-Type-Options    "nosniff" always;
        add_header Referrer-Policy           "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        proxy_pass http://backend/;
    }

    location /set-header/ {
        proxy_set_header X-Forwarded-for $remote_addr;
        proxy_set_header X-Community-name 'F5 NGINX Community';
        proxy_pass http://backend/response/;
    }

    location /response/ {
        default_type text/plain;
        return 200 "X-Forwarded-for: $http_x_forwarded_for\nX-Community-name: $http_x_community_name";
    }

    location /hello/ {
        default_type text/plain;
        js_content http.hello;
    }

    location /f5nginx/ {
        default_type text/plain;
        js_content f5nginx.hello;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}


